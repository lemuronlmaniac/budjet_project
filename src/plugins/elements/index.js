import Vue from 'vue';
import lang from 'element-ui/lib/locale/lang/en';
import locale from 'element-ui/lib/locale';
import 'element-ui/packages/theme-chalk/lib/index.css';
import {
    Button,
    Card,
    Form,
    FormItem,
    Input,
    Select,
    Option,
    Alert,
    Dialog
} from 'element-ui';

const elements = [
    Button,
    Card,
    Form,
    FormItem,
    Input,
    Select,
    Option,
    Alert,
    Dialog
];

locale.use(lang);

elements.forEach(El => Vue.use(El, { locale }));


// Домашнее задание к проекту Budget.

// 1. Внутри компоненты BudgetList взять шаблон который мы генерируем для одного элемента в списке и вынести его в отдельную компоненту например BudgetListItem.

// 2. Сейчас есть бага, если мы выберем в форме тип outcome но цифру введем без минуса то это значение приплюсуется с общему балансу, нужно это исправить.

// 3. TotalBalance должен менять цвет текста в зависимости от значения total, если значение больше нуля то цвет  зеленый, если ноль то черный и если меньше нуля то красный.

// 4. При удаление одного item из списка запрашивать подтверждение хотя бы  обычным confirm, но если хотите посложнее то используйте из фреймворка element-ui, элемент Dialog.

// 5. В каждом элементе списка расход/доход доблжна быть иконка el-icon-top или el-icon-bottom в зависимости от того какой тип у данного элемета расход или доход. Эти иконки вы можете найти в разделе Icon на сайте element-ui.  Также должен менятся цвет цифры на красный или зеленый.

// 6. Добавить кнопки сортировки над BudgetList которые будут управлять сортировкой списка, показать только расходы, показать только доходы, показать все.

// 7. Сделать кастомный валидатор для поля value в форме, пользователь не должен иметь возможности отправить форму со значением ноль в этом поле. Про кастомные валидаторы можете почитать в документации element-ui в разделе с Form.




